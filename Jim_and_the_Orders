import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the jimOrders function below.
    static int[] jimOrders(int[][] orders) {

    int[] res=new int[orders.length];
    System.out.println("orders.length" +orders.length);
    System.out.println("res.length" +res.length);

    for(int i=0; i<orders.length;i++){
        
        res[i]=orders[i][0]+orders[i][1];
    System.out.println("res" +res[i]);
        
    }
    int[] res1=new int[orders.length];
    
    for(int i=0;i<orders.length;i++){
        res1[i]=i+1;
    }
  
  
    for(int i=0;i<res.length;i++){
//        res1[i]=i;
        for(int j=i+1;j<res.length;j++){
        if(res[i]>res[j]){
            int temp=res[i];
            res[i]=res[j];
            res[j]=temp;
        // resfinal=j-1;
         int temp2=res1[i];
         res1[i]=res1[j] ;  
          res1[j]=temp2;
        }
        
        }
               
 System.out.println("Customer order "+ res1[i]);

    }
    
    
    return res1;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[][] orders = new int[n][2];

        for (int i = 0; i < n; i++) {
            String[] ordersRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 2; j++) {
                int ordersItem = Integer.parseInt(ordersRowItems[j]);
                orders[i][j] = ordersItem;
            }
        }

        int[] result = jimOrders(orders);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
